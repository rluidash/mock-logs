input {
  file {
    path => "/app/logs/app.log"
    start_position => "beginning"
    codec => multiline {
      pattern => "^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2},\d{3}"
      negate => true
      what => "previous"
      # Adding a tag for multiline logs
      multiline_tag => "multiline"
    }
  }
}

filter {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level} %{DATA:class} - %{GREEDYDATA:message}" }
  }
  date {
    match => [ "timestamp", "ISO8601" ]
  }

  # Tag multiline parse failures
  if "_grokparsefailure" in [tags] {
    mutate {
      add_tag => ["_multiline_grokparsefailure"]
    }
  }

  # Tag single line logs
  if !("multiline" in [tags]) {
    mutate {
      add_tag => ["singleline"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "mock-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}

